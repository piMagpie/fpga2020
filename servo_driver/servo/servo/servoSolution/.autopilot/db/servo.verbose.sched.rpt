

================================================================
== Vivado HLS Report for 'servo'
================================================================
* Date:           Mon Feb 10 09:15:09 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        servo
* Solution:       servoSolution
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.737 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1| 10.000 ns | 10.000 ns |    1|    1|   none  |
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.73>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%down_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %down) nounwind" [servo/servo.c:8]   --->   Operation 3 'read' 'down_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (1.55ns)   --->   "%icmp_ln8 = icmp eq i8 %down_read, 0" [servo/servo.c:8]   --->   Operation 4 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%current_speed_load = load i4* @current_speed, align 1" [servo/servo.c:9]   --->   Operation 5 'load' 'current_speed_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns) (grouped into LUT with out node select_ln8)   --->   "%zext_ln9 = zext i4 %current_speed_load to i5" [servo/servo.c:9]   --->   Operation 6 'zext' 'zext_ln9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (1.30ns)   --->   "%icmp_ln9 = icmp eq i4 %current_speed_load, 0" [servo/servo.c:9]   --->   Operation 7 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (1.73ns)   --->   "%add_ln9 = add i4 -1, %current_speed_load" [servo/servo.c:9]   --->   Operation 8 'add' 'add_ln9' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node select_ln8)   --->   "%select_ln9 = select i1 %icmp_ln9, i4 0, i4 %add_ln9" [servo/servo.c:9]   --->   Operation 9 'select' 'select_ln9' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node select_ln8)   --->   "%sext_ln9 = sext i4 %select_ln9 to i5" [servo/servo.c:9]   --->   Operation 10 'sext' 'sext_ln9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln8 = select i1 %icmp_ln8, i5 %zext_ln9, i5 %sext_ln9" [servo/servo.c:8]   --->   Operation 11 'select' 'select_ln8' <Predicate = true> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%up_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %up) nounwind" [servo/servo.c:12]   --->   Operation 12 'read' 'up_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.55ns)   --->   "%icmp_ln12 = icmp eq i8 %up_read, 0" [servo/servo.c:12]   --->   Operation 13 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %select_ln8, i32 3, i32 4)" [servo/servo.c:13]   --->   Operation 14 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.95ns)   --->   "%icmp_ln13 = icmp eq i2 %tmp, 0" [servo/servo.c:13]   --->   Operation 15 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (1.78ns)   --->   "%add_ln13 = add i5 1, %select_ln8" [servo/servo.c:13]   --->   Operation 16 'add' 'add_ln13' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node select_ln12)   --->   "%select_ln13 = select i1 %icmp_ln13, i5 %add_ln13, i5 %select_ln8" [servo/servo.c:13]   --->   Operation 17 'select' 'select_ln13' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.21ns) (out node of the LUT)   --->   "%select_ln12 = select i1 %icmp_ln12, i5 %select_ln8, i5 %select_ln13" [servo/servo.c:12]   --->   Operation 18 'select' 'select_ln12' <Predicate = true> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sext_ln12 = sext i5 %select_ln12 to i8" [servo/servo.c:12]   --->   Operation 19 'sext' 'sext_ln12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln16 = trunc i5 %select_ln12 to i4" [servo/servo.c:16]   --->   Operation 20 'trunc' 'trunc_ln16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%left_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %left_r) nounwind" [servo/servo.c:16]   --->   Operation 21 'read' 'left_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.55ns)   --->   "%icmp_ln16 = icmp eq i8 %left_read, 0" [servo/servo.c:16]   --->   Operation 22 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%current_duty_cycle_l = load i8* @current_duty_cycle, align 1" [servo/servo.c:17]   --->   Operation 23 'load' 'current_duty_cycle_l' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.91ns)   --->   "%sub_ln17 = sub i8 %current_duty_cycle_l, %sext_ln12" [servo/servo.c:17]   --->   Operation 24 'sub' 'sub_ln17' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_1 = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %select_ln12, i32 3, i32 4)" [servo/servo.c:26]   --->   Operation 25 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.95ns)   --->   "%icmp_ln26 = icmp eq i2 %tmp_1, 0" [servo/servo.c:26]   --->   Operation 26 'icmp' 'icmp_ln26' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (1.02ns)   --->   "%select_ln26 = select i1 %icmp_ln26, i4 %trunc_ln16, i4 -8" [servo/servo.c:26]   --->   Operation 27 'select' 'select_ln26' <Predicate = true> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i4 %select_ln26 to i8" [servo/servo.c:26]   --->   Operation 28 'zext' 'zext_ln26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %speed, i8 %zext_ln26) nounwind" [servo/servo.c:29]   --->   Operation 29 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "store i4 %select_ln26, i4* @current_speed, align 1" [servo/servo.c:9]   --->   Operation 30 'store' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.21>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %up) nounwind, !map !7"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %down) nounwind, !map !13"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %left_r) nounwind, !map !17"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %right_r) nounwind, !map !21"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %dutyCycle) nounwind, !map !25"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %speed) nounwind, !map !29"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @servo_str) nounwind"   --->   Operation 37 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.24ns)   --->   "%select_ln16 = select i1 %icmp_ln16, i8 %current_duty_cycle_l, i8 %sub_ln17" [servo/servo.c:16]   --->   Operation 38 'select' 'select_ln16' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%right_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %right_r) nounwind" [servo/servo.c:20]   --->   Operation 39 'read' 'right_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (1.55ns)   --->   "%icmp_ln20 = icmp eq i8 %right_read, 0" [servo/servo.c:20]   --->   Operation 40 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.91ns)   --->   "%add_ln21 = add i8 %select_ln16, %sext_ln12" [servo/servo.c:21]   --->   Operation 41 'add' 'add_ln21' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (1.24ns)   --->   "%select_ln20 = select i1 %icmp_ln20, i8 %select_ln16, i8 %add_ln21" [servo/servo.c:20]   --->   Operation 42 'select' 'select_ln20' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.55ns)   --->   "%icmp_ln25 = icmp ult i8 %select_ln20, -56" [servo/servo.c:25]   --->   Operation 43 'icmp' 'icmp_ln25' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (1.55ns)   --->   "%icmp_ln25_1 = icmp ult i8 %select_ln20, 100" [servo/servo.c:25]   --->   Operation 44 'icmp' 'icmp_ln25_1' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node select_ln25_1)   --->   "%select_ln25 = select i1 %icmp_ln25_1, i8 100, i8 %select_ln20" [servo/servo.c:25]   --->   Operation 45 'select' 'select_ln25' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln25_1 = select i1 %icmp_ln25, i8 %select_ln25, i8 -56" [servo/servo.c:25]   --->   Operation 46 'select' 'select_ln25_1' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %dutyCycle, i8 %select_ln25_1) nounwind" [servo/servo.c:28]   --->   Operation 47 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "store i8 %select_ln25_1, i8* @current_duty_cycle, align 1" [servo/servo.c:17]   --->   Operation 48 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "ret void" [servo/servo.c:30]   --->   Operation 49 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 7.74ns
The critical path consists of the following:
	'load' operation ('current_speed_load', servo/servo.c:9) on static variable 'current_speed' [20]  (0 ns)
	'add' operation ('add_ln9', servo/servo.c:9) [23]  (1.74 ns)
	'select' operation ('select_ln9', servo/servo.c:9) [24]  (0 ns)
	'select' operation ('select_ln8', servo/servo.c:8) [26]  (1.02 ns)
	'add' operation ('add_ln13', servo/servo.c:13) [31]  (1.78 ns)
	'select' operation ('select_ln13', servo/servo.c:13) [32]  (0 ns)
	'select' operation ('select_ln12', servo/servo.c:12) [33]  (1.22 ns)
	'icmp' operation ('icmp_ln26', servo/servo.c:26) [50]  (0.959 ns)
	'select' operation ('select_ln26', servo/servo.c:26) [51]  (1.02 ns)

 <State 2>: 7.21ns
The critical path consists of the following:
	'select' operation ('select_ln16', servo/servo.c:16) [40]  (1.25 ns)
	'add' operation ('add_ln21', servo/servo.c:21) [43]  (1.92 ns)
	'select' operation ('select_ln20', servo/servo.c:20) [44]  (1.25 ns)
	'icmp' operation ('icmp_ln25', servo/servo.c:25) [45]  (1.55 ns)
	'select' operation ('select_ln25_1', servo/servo.c:25) [48]  (1.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A



================================================================
== Vivado HLS Report for 'servo'
================================================================
* Date:           Mon Feb 17 18:08:09 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        servo
* Solution:       servoSolution
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.668 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1| 10.000 ns | 10.000 ns |    1|    1|   none  |
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.66>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %p_up) nounwind, !map !7"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %p_down) nounwind, !map !13"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %p_left) nounwind, !map !17"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %p_right) nounwind, !map !21"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %p_dutyCycle) nounwind, !map !25"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %p_speed) nounwind, !map !29"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @servo_str) nounwind"   --->   Operation 9 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_down_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %p_down) nounwind" [servo/servo.c:9]   --->   Operation 10 'read' 'p_down_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.55ns)   --->   "%icmp_ln9 = icmp eq i8 %p_down_read, 0" [servo/servo.c:9]   --->   Operation 11 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%current_speed_load = load i8* @current_speed, align 1" [servo/servo.c:9]   --->   Operation 12 'load' 'current_speed_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.55ns)   --->   "%icmp_ln9_1 = icmp eq i8 %current_speed_load, 0" [servo/servo.c:9]   --->   Operation 13 'icmp' 'icmp_ln9_1' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns) (grouped into LUT with out node select_ln9)   --->   "%or_ln9 = or i1 %icmp_ln9, %icmp_ln9_1" [servo/servo.c:9]   --->   Operation 14 'or' 'or_ln9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (1.91ns)   --->   "%add_ln10 = add i8 %current_speed_load, -1" [servo/servo.c:10]   --->   Operation 15 'add' 'add_ln10' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node or_ln13)   --->   "%or_ln9_1 = or i1 %icmp_ln9, %icmp_ln9_1" [servo/servo.c:9]   --->   Operation 16 'or' 'or_ln9_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node or_ln13)   --->   "%xor_ln9 = xor i1 %or_ln9_1, true" [servo/servo.c:9]   --->   Operation 17 'xor' 'xor_ln9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln9 = select i1 %or_ln9, i8 %current_speed_load, i8 %add_ln10" [servo/servo.c:9]   --->   Operation 18 'select' 'select_ln9' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%p_up_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %p_up) nounwind" [servo/servo.c:13]   --->   Operation 19 'read' 'p_up_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.55ns)   --->   "%icmp_ln13 = icmp ne i8 %p_up_read, 0" [servo/servo.c:13]   --->   Operation 20 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_PartSelect.i5.i8.i32.i32(i8 %select_ln9, i32 3, i32 7)" [servo/servo.c:13]   --->   Operation 21 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.36ns)   --->   "%icmp_ln13_1 = icmp eq i5 %tmp, 0" [servo/servo.c:13]   --->   Operation 22 'icmp' 'icmp_ln13_1' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.97ns)   --->   "%and_ln13 = and i1 %icmp_ln13, %icmp_ln13_1" [servo/servo.c:13]   --->   Operation 23 'and' 'and_ln13' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (1.91ns)   --->   "%add_ln14 = add i8 %select_ln9, 1" [servo/servo.c:14]   --->   Operation 24 'add' 'add_ln14' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln13 = or i1 %and_ln13, %xor_ln9" [servo/servo.c:13]   --->   Operation 25 'or' 'or_ln13' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.24ns)   --->   "%select_ln13 = select i1 %and_ln13, i8 %add_ln14, i8 %select_ln9" [servo/servo.c:13]   --->   Operation 26 'select' 'select_ln13' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%p_left_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %p_left) nounwind" [servo/servo.c:17]   --->   Operation 27 'read' 'p_left_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.55ns)   --->   "%icmp_ln17 = icmp eq i8 %p_left_read, 0" [servo/servo.c:17]   --->   Operation 28 'icmp' 'icmp_ln17' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %or_ln13, label %mergeST, label %._crit_edge4.new_ifconv" [servo/servo.c:13]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "store i8 %select_ln13, i8* @current_speed, align 1" [servo/servo.c:10]   --->   Operation 30 'store' <Predicate = (or_ln13)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "br label %._crit_edge4.new_ifconv"   --->   Operation 31 'br' <Predicate = (or_ln13)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%current_duty_cycle_l = load i8* @current_duty_cycle, align 1" [servo/servo.c:17]   --->   Operation 32 'load' 'current_duty_cycle_l' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln17 = zext i8 %current_duty_cycle_l to i9" [servo/servo.c:17]   --->   Operation 33 'zext' 'zext_ln17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln17_1 = zext i8 %select_ln13 to i9" [servo/servo.c:17]   --->   Operation 34 'zext' 'zext_ln17_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (1.91ns)   --->   "%sub_ln17 = sub i9 %zext_ln17, %zext_ln17_1" [servo/servo.c:17]   --->   Operation 35 'sub' 'sub_ln17' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 7.98>
ST_2 : Operation 36 [1/1] (1.66ns)   --->   "%icmp_ln17_1 = icmp sgt i9 %sub_ln17, 99" [servo/servo.c:17]   --->   Operation 36 'icmp' 'icmp_ln17_1' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (1.91ns)   --->   "%sub_ln18 = sub i8 %current_duty_cycle_l, %select_ln13" [servo/servo.c:18]   --->   Operation 37 'sub' 'sub_ln18' <Predicate = (!icmp_ln17)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node select_ln17_1)   --->   "%select_ln17 = select i1 %icmp_ln17_1, i8 %sub_ln18, i8 %current_duty_cycle_l" [servo/servo.c:17]   --->   Operation 38 'select' 'select_ln17' <Predicate = (!icmp_ln17)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node or_ln21)   --->   "%xor_ln17 = xor i1 %icmp_ln17, true" [servo/servo.c:17]   --->   Operation 39 'xor' 'xor_ln17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node or_ln21)   --->   "%and_ln17 = and i1 %icmp_ln17_1, %xor_ln17" [servo/servo.c:17]   --->   Operation 40 'and' 'and_ln17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln17_1 = select i1 %icmp_ln17, i8 %current_duty_cycle_l, i8 %select_ln17" [servo/servo.c:17]   --->   Operation 41 'select' 'select_ln17_1' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%p_right_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %p_right) nounwind" [servo/servo.c:21]   --->   Operation 42 'read' 'p_right_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.55ns)   --->   "%icmp_ln21 = icmp eq i8 %p_right_read, 0" [servo/servo.c:21]   --->   Operation 43 'icmp' 'icmp_ln21' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln21 = zext i8 %select_ln17_1 to i9" [servo/servo.c:21]   --->   Operation 44 'zext' 'zext_ln21' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (1.91ns)   --->   "%add_ln21 = add i9 %zext_ln21, %zext_ln17_1" [servo/servo.c:21]   --->   Operation 45 'add' 'add_ln21' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.66ns)   --->   "%icmp_ln21_1 = icmp ult i9 %add_ln21, 201" [servo/servo.c:21]   --->   Operation 46 'icmp' 'icmp_ln21_1' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.66> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (1.91ns)   --->   "%add_ln22 = add i8 %select_ln17_1, %select_ln13" [servo/servo.c:22]   --->   Operation 47 'add' 'add_ln22' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node select_ln21_1)   --->   "%select_ln21 = select i1 %icmp_ln21_1, i8 %add_ln22, i8 %select_ln17_1" [servo/servo.c:21]   --->   Operation 48 'select' 'select_ln21' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node or_ln21)   --->   "%xor_ln21 = xor i1 %icmp_ln21, true" [servo/servo.c:21]   --->   Operation 49 'xor' 'xor_ln21' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node or_ln21)   --->   "%and_ln21 = and i1 %icmp_ln21_1, %xor_ln21" [servo/servo.c:21]   --->   Operation 50 'and' 'and_ln21' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln21 = or i1 %and_ln17, %and_ln21" [servo/servo.c:21]   --->   Operation 51 'or' 'or_ln21' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln21_1 = select i1 %icmp_ln21, i8 %select_ln17_1, i8 %select_ln21" [servo/servo.c:21]   --->   Operation 52 'select' 'select_ln21_1' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %p_dutyCycle, i8 %select_ln21_1) nounwind" [servo/servo.c:25]   --->   Operation 53 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %p_speed, i8 %select_ln13) nounwind" [servo/servo.c:26]   --->   Operation 54 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "br i1 %or_ln21, label %mergeST1, label %._crit_edge7.new" [servo/servo.c:21]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "store i8 %select_ln21_1, i8* @current_duty_cycle, align 1" [servo/servo.c:18]   --->   Operation 56 'store' <Predicate = (or_ln21)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "br label %._crit_edge7.new"   --->   Operation 57 'br' <Predicate = (or_ln21)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "ret void" [servo/servo.c:27]   --->   Operation 58 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.67ns
The critical path consists of the following:
	'load' operation ('current_speed_load', servo/servo.c:9) on static variable 'current_speed' [20]  (0 ns)
	'add' operation ('add_ln10', servo/servo.c:10) [23]  (1.92 ns)
	'select' operation ('select_ln9', servo/servo.c:9) [26]  (1.25 ns)
	'icmp' operation ('icmp_ln13_1', servo/servo.c:13) [30]  (1.36 ns)
	'and' operation ('and_ln13', servo/servo.c:13) [31]  (0.978 ns)
	'select' operation ('select_ln13', servo/servo.c:13) [34]  (1.25 ns)
	'sub' operation ('sub_ln17', servo/servo.c:17) [45]  (1.92 ns)

 <State 2>: 7.99ns
The critical path consists of the following:
	'sub' operation ('sub_ln18', servo/servo.c:18) [47]  (1.92 ns)
	'select' operation ('select_ln17', servo/servo.c:17) [48]  (0 ns)
	'select' operation ('select_ln17_1', servo/servo.c:17) [51]  (1.25 ns)
	'add' operation ('add_ln21', servo/servo.c:21) [55]  (1.92 ns)
	'icmp' operation ('icmp_ln21_1', servo/servo.c:21) [56]  (1.66 ns)
	'select' operation ('select_ln21', servo/servo.c:21) [58]  (0 ns)
	'select' operation ('select_ln21_1', servo/servo.c:21) [62]  (1.25 ns)
	'store' operation ('store_ln18', servo/servo.c:18) of variable 'select_ln21_1', servo/servo.c:21 on static variable 'current_duty_cycle' [67]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

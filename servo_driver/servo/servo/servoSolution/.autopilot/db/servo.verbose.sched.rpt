

================================================================
== Vivado HLS Report for 'servo'
================================================================
* Date:           Mon Feb 10 08:32:42 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        servo
* Solution:       servoSolution
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.638 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|   0 ns   |   0 ns   |    0|    0|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.63>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %up) nounwind, !map !7"   --->   Operation 2 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %down) nounwind, !map !13"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %left_r) nounwind, !map !17"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %right_r) nounwind, !map !21"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %dutyCycle) nounwind, !map !25"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %speed) nounwind, !map !29"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([6 x i8]* @servo_str) nounwind"   --->   Operation 8 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%down_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %down) nounwind" [servo/servo.c:8]   --->   Operation 9 'read' 'down_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.55ns)   --->   "%icmp_ln8 = icmp eq i8 %down_read, 0" [servo/servo.c:8]   --->   Operation 10 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%current_speed_load = load i7* @current_speed, align 1" [servo/servo.c:9]   --->   Operation 11 'load' 'current_speed_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln9 = zext i7 %current_speed_load to i8" [servo/servo.c:9]   --->   Operation 12 'zext' 'zext_ln9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.87ns)   --->   "%add_ln9 = add i8 -1, %zext_ln9" [servo/servo.c:9]   --->   Operation 13 'add' 'add_ln9' <Predicate = (!icmp_ln8)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (1.24ns)   --->   "%select_ln8 = select i1 %icmp_ln8, i8 %zext_ln9, i8 %add_ln9" [servo/servo.c:8]   --->   Operation 14 'select' 'select_ln8' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%up_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %up) nounwind" [servo/servo.c:12]   --->   Operation 15 'read' 'up_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.55ns)   --->   "%icmp_ln12 = icmp eq i8 %up_read, 0" [servo/servo.c:12]   --->   Operation 16 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (1.91ns)   --->   "%add_ln13 = add i8 1, %select_ln8" [servo/servo.c:13]   --->   Operation 17 'add' 'add_ln13' <Predicate = (!icmp_ln12)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.24ns)   --->   "%select_ln12 = select i1 %icmp_ln12, i8 %select_ln8, i8 %add_ln13" [servo/servo.c:12]   --->   Operation 18 'select' 'select_ln12' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node select_ln26_1)   --->   "%trunc_ln26 = trunc i8 %select_ln12 to i7" [servo/servo.c:26]   --->   Operation 19 'trunc' 'trunc_ln26' <Predicate = (!tmp_1 & icmp_ln26)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_PartSelect.i5.i8.i32.i32(i8 %select_ln12, i32 3, i32 7)" [servo/servo.c:26]   --->   Operation 20 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.36ns)   --->   "%icmp_ln26 = icmp slt i5 %tmp, 1" [servo/servo.c:26]   --->   Operation 21 'icmp' 'icmp_ln26' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node select_ln26_1)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %select_ln12, i32 7)" [servo/servo.c:26]   --->   Operation 22 'bitselect' 'tmp_1' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node select_ln26_1)   --->   "%select_ln26 = select i1 %tmp_1, i7 0, i7 %trunc_ln26" [servo/servo.c:26]   --->   Operation 23 'select' 'select_ln26' <Predicate = (icmp_ln26)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln26_1 = select i1 %icmp_ln26, i7 %select_ln26, i7 8" [servo/servo.c:26]   --->   Operation 24 'select' 'select_ln26_1' <Predicate = true> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i7 %select_ln26_1 to i8" [servo/servo.c:26]   --->   Operation 25 'zext' 'zext_ln26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %dutyCycle, i8 -56) nounwind" [servo/servo.c:28]   --->   Operation 26 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %speed, i8 %zext_ln26) nounwind" [servo/servo.c:29]   --->   Operation 27 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "store i7 %select_ln26_1, i7* @current_speed, align 1" [servo/servo.c:9]   --->   Operation 28 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "ret void" [servo/servo.c:30]   --->   Operation 29 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.64ns
The critical path consists of the following:
	'load' operation ('current_speed_load', servo/servo.c:9) on static variable 'current_speed' [18]  (0 ns)
	'add' operation ('add_ln9', servo/servo.c:9) [20]  (1.87 ns)
	'select' operation ('select_ln8', servo/servo.c:8) [21]  (1.25 ns)
	'add' operation ('add_ln13', servo/servo.c:13) [24]  (1.92 ns)
	'select' operation ('select_ln12', servo/servo.c:12) [25]  (1.25 ns)
	'icmp' operation ('icmp_ln26', servo/servo.c:26) [28]  (1.36 ns)
	'select' operation ('select_ln26_1', servo/servo.c:26) [31]  (0.993 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
